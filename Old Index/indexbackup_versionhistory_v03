<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>SC: Evo Ladder</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(to bottom, #223e4b, #0e1415);
      color: #fff;
      margin: 0;
      padding: 2rem;
    }
    h1 {
      text-align: center;
      margin-bottom: 1rem;
    }
    .table-wrapper {
      max-width: 960px;
      margin: 0 auto;
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 0 15px rgba(0,0,0,0.25);
    }
    table {
      border-collapse: collapse;
      width: 100%;
    }
    th, td {
      border: 1px solid #444;
      padding: 0.75rem;
      text-align: center;
      color: white;
    }
    th {
      background-color: #2d2d2d;
      color: white;
    }
    .rank-S td:last-child {
      background: linear-gradient(to bottom, #65e2f5 15%, rgba(0, 0, 0, 0) 85%);
    }
    .rank-A td:last-child {
      background: linear-gradient(to bottom, #28d6f0 15%, rgba(0, 0, 0, 0) 85%);
    }
    .rank-B td:last-child {
      background: linear-gradient(to bottom, #2881f0 15%, rgba(0, 0, 0, 0) 85%);
    }
    .rank-C td:last-child {
      background: linear-gradient(to bottom, #eef028 15%, rgba(0, 0, 0, 0) 85%);
    }
    .rank-D td:last-child {
      background: linear-gradient(to bottom, #28f099 15%, rgba(0, 0, 0, 0) 85%);
    }
    .rank-F td:last-child {
      background: linear-gradient(to bottom, #5cf028 15%, rgba(0, 0, 0, 0) 85%);
    }
    .race-icon {
      height: 20px;
      vertical-align: middle;
      margin: 0 4px;
    }
  </style>
</head>
<body>
  <h1>SC: Evo Ladder</h1>
  <div class="table-wrapper">
    <table id="leaderboard">
      <thead></thead>
      <tbody></tbody>
    </table>
  </div>

  <script>
    const CSV_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSy8FqFeV1ehxYkcARDbImfb3UEPX9tnFodJk5q4bntnlg_nxHRMSLkhK1R5cedyE_qQt3j_hnM9bq8/pub?gid=172854205&single=true&output=csv';

    function createRaceIcons(raceValue) {
      const iconBasePath = 'Assets/icons/';
      const knownRaces = [
        'BW Terran', 'BW Zerg', 'BW Protoss',
        'SC2 Terran', 'SC2 Zerg', 'SC2 Protoss'
      ];

      if (raceValue === 'Random' || raceValue === 'Unknown') {
        return raceValue;
      }

      const races = raceValue.split(' / ');
      return races.map(r => {
        if (knownRaces.includes(r)) {
          const clean = r.replace(' ', '_');
          return `<img class="race-icon" src="${iconBasePath}${clean}_Small.png" alt="${r}" />`;
        } else {
          return r;
        }
      }).join('');
    }

    fetch(CSV_URL)
      .then(res => res.text())
      .then(csv => {
        const rows = csv.trim().split('\n').map(row => row.split(','));
        const [headers, ...data] = rows;

        const thead = document.querySelector('#leaderboard thead');
        const tbody = document.querySelector('#leaderboard tbody');

        thead.innerHTML = `<tr>${headers.map(h => `<th>${h}</th>`).join('')}</tr>`;

        data.forEach(row => {
          const rankClass = 'rank-' + row[5];
          const tr = document.createElement('tr');
          tr.className = rankClass;
          tr.innerHTML = row.map((cell, i) => {
            if (i === 1) {
              return `<td>${createRaceIcons(cell)}</td>`;
            }
            return `<td>${cell}</td>`;
          }).join('');
          tbody.appendChild(tr);
        });
      })
      .catch(err => {
        document.querySelector('#leaderboard tbody').innerHTML = '<tr><td colspan="6">Failed to load data.</td></tr>';
        console.error('Failed to load CSV:', err);
      });
  </script>
</body>
</html>
